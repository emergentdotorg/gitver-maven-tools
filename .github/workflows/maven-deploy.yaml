name: Maven Deploy
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  #pull_request:
  #  types:
  #    - closed
  push:
    tags:
      - 'v*.*.*'
    #branches:
    #  - main
    #  - master
  workflow_dispatch:

jobs:
  resolve-vars:
    outputs:
      release_branch: ${{ steps.resolve_vars.outputs.release_branch }}
      version: ${{ steps.resolve_vars.outputs.version }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - id: resolve_vars
        # 1. Get the list of branches ref where this tag exists
        # 2. Remove 'origin/' from that result
        # 3. Put that string in output
        # => We can now use function 'contains(list, item)''
        env:
          GH_REF: ${{ github.ref }}
        # language="shell script"
        run: |
          git fetch origin -t
          raw_branch="$(git branch -r --contains ${GH_REF} 2>/dev/null | grep -v ' -> ' | cut -c3- )"
          if [ $( echo "${raw_branch}" | grep -E '^origin/(main|master|release-.*)$' ) ]; then
            RELEASE_BRANCH=true
          else
            RELEASE_BRANCH=false
          fi
          VERSION="${GH_REF#refs/tags/v}"
          echo "GH_REF=${GH_REF}"
          echo "raw_branch=${raw_branch}"
          echo "RELEASE_BRANCH=${RELEASE_BRANCH}"
          echo "VERSION=${VERSION}"
          printf '%s\n' \
            "release_branch=${RELEASE_BRANCH}" \
            "version=${VERSION}" \
            >> $GITHUB_OUTPUT

  invoke-deploy:
    needs: resolve-vars
    #if: ${{ github.event_name != 'pull_request' || github.event.pull_request.merged == true }}
    if: ${{ needs.resolve-vars.outputs.release_branch == 'true' }}
    permissions:
      contents: write
    uses: emergentdotorg/github-actions/.github/workflows/maven-deploy.yaml@v3
    secrets: inherit
    with:
      java-version: 17
      deploy-server: 'central'
      revision: ${{ needs.resolve-vars.outputs.version }}

  process-results:
    runs-on: ubuntu-latest
    needs: invoke-deploy
    steps:
      # language="shell script"
      - run: echo version=${{ needs.invoke-deploy.outputs.version }}
